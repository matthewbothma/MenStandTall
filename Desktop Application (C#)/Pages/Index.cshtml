@page
@model Wilproject.Pages.IndexModel
@{
    ViewData["Title"] = "Login - Men Stand Tall";
    Layout = null; // No layout for login page
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            background: linear-gradient(135deg, #4B0082, #6a1b9a);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: Arial, sans-serif;
        }

        .login-container {
            background: white;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            max-width: 450px;
            width: 100%;
        }

        .logo {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo h2 {
            color: #4B0082;
            font-weight: bold;
        }

        #firebaseui-auth-container {
            margin-top: 20px;
        }

        #loader {
            text-align: center;
            color: #666;
            padding: 20px;
        }

        .manual-login {
            margin-top: 20px;
        }

        .btn {
            margin: 5px 0;
        }
    </style>
</head>

<body>
    <div class="login-container">
        <div class="logo">
            <h2>Men Stand Tall</h2>
            <p class="text-muted">Project Management Portal</p>
        </div>

        <div id="firebaseui-auth-container"></div>
        <div id="loader">Loading authentication...</div>

        <!-- Simple manual login -->
        <div id="manual-login" class="manual-login" style="display: none;">
            <hr>
            <h5>Sign In Options</h5>
            <button class="btn btn-primary btn-block" id="google-signin">
                <i class="fab fa-google"></i> Sign in with Google
            </button>
            <div class="mt-3">
                <input type="email" id="email" class="form-control mb-2" placeholder="Email address">
                <input type="password" id="password" class="form-control mb-2" placeholder="Password">
                <button class="btn btn-success btn-block" id="email-signin">Sign in with Email</button>
                <button class="btn btn-info btn-block" id="email-register">Create Account</button>
            </div>
        </div>
    </div>

    <!-- Firebase Scripts -->
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-auth-compat.js"></script>

    <script>
        console.log('🔐 Login page starting...');

        var firebaseConfig = {
            apiKey: "AIzaSyCCCWM8JMsxsY28DrhxWje0MGsGYc9XLQo",
            authDomain: "menstandtall-6779a.firebaseapp.com",
            projectId: "menstandtall-6779a",
            storageBucket: "menstandtall-6779a.firebasestorage.app",
            messagingSenderId: "610463601364",
            appId: "1:610463601364:web:396e8e0c8aacafe2716141",
            measurementId: "G-XQCF3W12MX"
        };

        var auth = null;
        var firebaseInitialized = false;

        function hideLoader() {
            document.getElementById('loader').style.display = 'none';
        }

        function showManualLogin() {
            document.getElementById('manual-login').style.display = 'block';
            hideLoader();
        }

        // Initialize Firebase (without FirebaseUI)
        function initializeFirebase() {
            console.log('🔥 Initializing Firebase...');

            try {
                if (typeof firebase === 'undefined') {
                    throw new Error('Firebase SDK not loaded');
                }

                if (!firebase.apps.length) {
                    firebase.initializeApp(firebaseConfig);
                    console.log('✅ Firebase initialized');
                } else {
                    console.log('✅ Firebase already initialized');
                }

                auth = firebase.auth();
                console.log('✅ Auth initialized');

                // Check if user is already logged in
                auth.onAuthStateChanged(function (user) {
                    if (user) {
                        console.log('✅ User already logged in:', user.email);
                        window.location.href = '/Dashboard';
                    }
                });

                firebaseInitialized = true;
                return true;
            } catch (error) {
                console.error('❌ Firebase initialization failed:', error);
                return false;
            }
        }

        // Setup manual login handlers
        function setupManualLogin() {
            console.log('🔧 Setting up manual login...');

            // Google Sign In
            document.getElementById('google-signin').onclick = function () {
                console.log('🔄 Google sign in clicked');
                if (auth) {
                    var provider = new firebase.auth.GoogleAuthProvider();
                    auth.signInWithPopup(provider).then(function (result) {
                        console.log('✅ Google sign in successful');
                        window.location.href = '/Dashboard';
                    }).catch(function (error) {
                        console.error('❌ Google sign in failed:', error);
                        alert('Google sign in failed: ' + error.message);
                    });
                } else {
                    alert('Authentication not ready. Please refresh the page.');
                }
            };

            // Email Sign In
            document.getElementById('email-signin').onclick = function () {
                console.log('🔄 Email sign in clicked');
                var email = document.getElementById('email').value.trim();
                var password = document.getElementById('password').value;

                if (!email || !password) {
                    alert('Please enter both email and password.');
                    return;
                }

                if (auth) {
                    auth.signInWithEmailAndPassword(email, password).then(function (result) {
                        console.log('✅ Email sign in successful');
                        window.location.href = '/Dashboard';
                    }).catch(function (error) {
                        console.error('❌ Email sign in failed:', error);
                        alert('Sign in failed: ' + error.message);
                    });
                } else {
                    alert('Authentication not ready. Please refresh the page.');
                }
            };

            // Email Registration
            document.getElementById('email-register').onclick = function () {
                console.log('🔄 Email registration clicked');
                var email = document.getElementById('email').value.trim();
                var password = document.getElementById('password').value;

                if (!email || !password) {
                    alert('Please enter both email and password.');
                    return;
                }

                if (password.length < 6) {
                    alert('Password must be at least 6 characters long.');
                    return;
                }

                if (auth) {
                    auth.createUserWithEmailAndPassword(email, password).then(function (result) {
                        console.log('✅ Account created successfully');
                        window.location.href = '/Dashboard';
                    }).catch(function (error) {
                        console.error('❌ Account creation failed:', error);
                        alert('Account creation failed: ' + error.message);
                    });
                } else {
                    alert('Authentication not ready. Please refresh the page.');
                }
            };

            console.log('✅ Manual login setup complete');
        }

        // Try to load FirebaseUI, but don't wait forever
        function tryFirebaseUI() {
            console.log('🎨 Attempting to load FirebaseUI...');

            // Create FirebaseUI script element
            var script = document.createElement('script');
            script.src = 'https://cdn.firebase.com/libs/firebaseui/6.0.2/firebaseui.js';
            script.onload = function () {
                console.log('✅ FirebaseUI loaded, initializing...');
                initializeFirebaseUI();
            };
            script.onerror = function () {
                console.log('❌ FirebaseUI failed to load, using manual login');
                showManualLogin();
                setupManualLogin();
            };

            // Add CSS for FirebaseUI
            var link = document.createElement('link');
            link.rel = 'stylesheet';
            link.href = 'https://cdn.firebase.com/libs/firebaseui/6.0.2/firebaseui.css';
            document.head.appendChild(link);

            document.head.appendChild(script);

            // Timeout fallback
            setTimeout(function () {
                if (typeof firebaseui === 'undefined') {
                    console.log('⏰ FirebaseUI timeout, falling back to manual login');
                    showManualLogin();
                    setupManualLogin();
                }
            }, 5000);
        }

        // Initialize FirebaseUI if it loads
        function initializeFirebaseUI() {
            try {
                var uiConfig = {
                    signInSuccessUrl: '/Dashboard',
                    signInOptions: [
                        firebase.auth.GoogleAuthProvider.PROVIDER_ID,
                        firebase.auth.EmailAuthProvider.PROVIDER_ID
                    ],
                    tosUrl: '#',
                    privacyPolicyUrl: '#'
                };

                var ui = new firebaseui.auth.AuthUI(auth);
                ui.start('#firebaseui-auth-container', uiConfig);

                console.log('✅ FirebaseUI initialized');
                hideLoader();
            } catch (error) {
                console.error('❌ FirebaseUI initialization failed:', error);
                showManualLogin();
                setupManualLogin();
            }
        }

        // Main initialization
        document.addEventListener('DOMContentLoaded', function () {
            console.log('📄 DOM loaded, starting initialization...');

            if (initializeFirebase()) {
                // Try FirebaseUI first, but fallback to manual login
                tryFirebaseUI();

                // Setup manual login as backup (always available)
                setTimeout(function () {
                    setupManualLogin();
                }, 1000);
            } else {
                console.log('❌ Firebase failed, showing manual login only');
                showManualLogin();
                setupManualLogin();
            }
        });

        console.log('🔐 Login page script loaded');
    </script>
</body>

</html>